package joojoo.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 새 테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Persons implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** persons_code. */
	private Integer personsCode;

	/** persons_level. */
	private String personsLevel;

	/** 새 테이블 목록. */
	private Set<EventComment> eventCommentSet;

	/**
	 * 생성자.
	 */
	public Persons() {
		this.eventCommentSet = new HashSet<EventComment>();
	}

	/**
	 * persons_code을 설정합니다..
	 * 
	 * @param personsCode
	 *            persons_code
	 */
	public void setPersonsCode(Integer personsCode) {
		this.personsCode = personsCode;
	}

	/**
	 * persons_code을 가져옵니다..
	 * 
	 * @return persons_code
	 */
	public Integer getPersonsCode() {
		return this.personsCode;
	}

	/**
	 * persons_level을 설정합니다..
	 * 
	 * @param personsLevel
	 *            persons_level
	 */
	public void setPersonsLevel(String personsLevel) {
		this.personsLevel = personsLevel;
	}

	/**
	 * persons_level을 가져옵니다..
	 * 
	 * @return persons_level
	 */
	public String getPersonsLevel() {
		return this.personsLevel;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param eventCommentSet
	 *            새 테이블 목록
	 */
	public void setEventCommentSet(Set<EventComment> eventCommentSet) {
		this.eventCommentSet = eventCommentSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param eventComment
	 *            새 테이블
	 */
	public void addEventComment(EventComment eventComment) {
		this.eventCommentSet.add(eventComment);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<EventComment> getEventCommentSet() {
		return this.eventCommentSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((personsCode == null) ? 0 : personsCode.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Persons other = (Persons) obj;
		if (personsCode == null) {
			if (other.personsCode != null) {
				return false;
			}
		} else if (!personsCode.equals(other.personsCode)) {
			return false;
		}
		return true;
	}

}
