package joojoo.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 새 테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class StoreType implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** type_name. */
	private String typeName;

	/** type_code. */
	private Integer typeCode;

	/** 새 테이블 목록. */
	private Set<Stores> storesSet;

	/**
	 * 생성자.
	 */
	public StoreType() {
		this.storesSet = new HashSet<Stores>();
	}

	/**
	 * type_name을 설정합니다..
	 * 
	 * @param typeName
	 *            type_name
	 */
	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}

	/**
	 * type_name을 가져옵니다..
	 * 
	 * @return type_name
	 */
	public String getTypeName() {
		return this.typeName;
	}

	/**
	 * type_code을 설정합니다..
	 * 
	 * @param typeCode
	 *            type_code
	 */
	public void setTypeCode(Integer typeCode) {
		this.typeCode = typeCode;
	}

	/**
	 * type_code을 가져옵니다..
	 * 
	 * @return type_code
	 */
	public Integer getTypeCode() {
		return this.typeCode;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param storesSet
	 *            새 테이블 목록
	 */
	public void setStoresSet(Set<Stores> storesSet) {
		this.storesSet = storesSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param stores
	 *            새 테이블
	 */
	public void addStores(Stores stores) {
		this.storesSet.add(stores);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<Stores> getStoresSet() {
		return this.storesSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((typeCode == null) ? 0 : typeCode.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		StoreType other = (StoreType) obj;
		if (typeCode == null) {
			if (other.typeCode != null) {
				return false;
			}
		} else if (!typeCode.equals(other.typeCode)) {
			return false;
		}
		return true;
	}

}
