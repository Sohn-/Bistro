<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="joojoo.mapper.RviewCommentMapper">

  	<resultMap type="RviewComment" id="RviewCommentMap">
		
		<id column="commentCode" jdbcType="INTEGER" property="commentCode" />		
		<id column="userId" jdbcType="VARCHAR" property="userId" />		
		<id column="title" jdbcType="VARCHAR" property="title" />		
		<id column="content" jdbcType="VARCHAR" property="content" />		
		<id column="regDate" jdbcType="DATE" property="regDate" />		
		<id column="starPoint" jdbcType="INTEGER" property="starPoint" />			
		<id column="storeCode" jdbcType="INTEGER" property="storeCode" />		
		
		<result column="commentCode" jdbcType="INTEGER" property="commentCode" />		
		<result column="userId" jdbcType="VARCHAR" property="userId" />		
		<result column="title" jdbcType="VARCHAR" property="title" />		
		<result column="content" jdbcType="VARCHAR" property="content" />		
		<result column="regDate" jdbcType="DATE" property="regDate" />		
		<result column="starPoint" jdbcType="INTEGER" property="starPoint" />			
		<result column="storeCode" jdbcType="INTEGER" property="storeCode" />	
		
	</resultMap> 
	
<!-- 		comment_code number NOT NULL,
	owner_id varchar2(20) NOT NULL,
	title varchar2(200) NOT NULL,
	content varchar2(500) NOT NULL,
	reg_date date DEFAULT SYSDATE NOT NULL,
	star_point number NOT NULL,
	store_code number NOT NULL,
	user_id varchar2(20) NOT NULL, -->
	
	 <insert id="insertRviewComment" parameterType="RviewComment">
		insert into rview_comment(user_id, title, content, star_point, store_code) 
		values(#{userId}, #{title}, #{content}, #{starPoint}, #{storeCode})	
	</insert> 
	
 	<update id="updateRviewComment" parameterType="RviewComment">
		UPDATE rview_comment SET
		user_id = #{userId},
		title = #{title},
		content = #{content},
		star_point = #{starPoint},
		store_code = #{storeCode}	
		WHERE comment_code = #{commentCode}
	</update>
 	
	<delete id="deleteRviewComment" parameterType="INTEGER">
		DELETE FROM rview_comment
		WHERE comment_code = #{commentCode}
	</delete>
	
	<select id= "getRviewCommentsByUserId" parameterType="String"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment 
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	
		where user_id=#{userId}					
	</select>
	
	<select id= "getRviewCommentsByStoreCode" parameterType="INTEGER"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment 
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	
		where store_code=#{storeCode}					
	</select>
	
	<select id= "getRviewCommentsByKeyword" parameterType="RviewComment"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	
		
		where title like '%${keyword}%'
		or content like '%${keyword}%'
		or store_name like '%${keyword}%'
		or store_adress like '%${keyword}%'
		or owner_name like '%${keyword}%'
		or region_name like '%${keyword}%'
		or type_name like '%${keyword}%'

	</select> 
	
	<select id= "getRviewCommentsByUserName" parameterType="String"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	 
		where user_name=#{userName}					
	</select>
	
	<select id= "getRviewCommentsByContent" parameterType="String"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	 
		where content=#{content}					
	</select>
	
	<select id= "getRviewCommentsByTitle" parameterType="String"
						resultMap="RviewCommentMap">
		select * 
		from rview_comment
		join stores s using(store_code)
		join region r using(region_code)
		join users u using(user_id)
		join store_type t using(type_code)
		join owners using(owner_id)	 
		where title=#{title}					
	</select>
	
	<select id= "getAllRviewComments" resultMap="RviewCommentMap">
		select * 
		from rview_comment
	</select>
	
	<!-- <insert id="insertEventComment" parameterType="EventComment">
		insert into event_comment(title, content, start_date, end_date, store_code, persons_code, service_type_code) 
		values(#{title}, #{content},#{startDate}, #{endDate}, #{storeCode}, #{personsCode}, #{serviceTypeCode})	
	</insert> 
 
  	<update id="updateEventComment" parameterType="EventComment">
		UPDATE event_comment SET
		title = #{title},
		content = #{content},
		start_date = #{startDate},
		end_date = #{endDate},
		store_code = #{storeCode},
		persons_code = #{personsCode},
		service_type_code = #{serviceTypeCode}
		WHERE comment_code = #{commentCode}
	</update>
 	
	<delete id="deleteEventComment" parameterType="INTEGER">
		DELETE FROM event_comment
		WHERE comment_code = #{commentCode}
	</delete>
	
	 <select id= "getEventCommentsByCategory" parameterType="EventComment"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 		
		where region_code = #{regionCode}
		and type_code = #{typeCode}
		and persons_code = #{personsCode}
		and service_type_code = #{serviceTypeCode}			
	</select>
	
	<select id= "getEventCommentsBySearchKeyword" parameterType="EventComment"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		
		where title like '%${keyword}%'
		or content like '%${keyword}%'
		or store_name like '%${keyword}%'
		or store_adress like '%${keyword}%'
		or owner_name like '%${keyword}%'
		or region_name like '%${keyword}%'
		or type_name like '%${keyword}%'
		or persons_level like '%${keyword}%'
		or service_type_name like '%${keyword}%'

	</select> -->
</mapper>