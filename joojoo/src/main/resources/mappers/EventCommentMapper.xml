<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="joojoo.mapper.EventCommentMapper">
  	 <resultMap type="EventComment" id="EventCommentMap">
		<id column="commentCode" jdbcType="INTEGER" property="commentCode" />
		<id column="title" jdbcType="VARCHAR" property="title" />
		<id column="content" jdbcType="VARCHAR" property="content" />
		<id column="regDate" jdbcType="DATE" property="regDate" />
		<id column="startDate" jdbcType="DATE" property="startDate" />
		<id column="endDate" jdbcType="DATE" property="endDate" />
		<id column="storeCode" jdbcType="INTEGER" property="storeCode" />
		<id column="personsCode" jdbcType="INTEGER" property="personsCode" />
		<id column="serviceTypeCode" jdbcType="INTEGER" property="serviceTypeCode" />
		<id column="deleteRequest" jdbcType="VARCHAR" property="deleteRequest" />
		
		<result column="commentCode" jdbcType="INTEGER" property="commentCode" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="regDate" jdbcType="DATE" property="regDate" />
		<result column="startDate" jdbcType="DATE" property="startDate" />
		<result column="endDate" jdbcType="DATE" property="endDate" />
		<result column="storeCode" jdbcType="INTEGER" property="storeCode" />
		<result column="personsCode" jdbcType="INTEGER" property="personsCode" />
		<result column="serviceTypeCode" jdbcType="INTEGER" property="serviceTypeCode" />
		<result column="deleteRequest" jdbcType="VARCHAR" property="deleteRequest" />
	</resultMap> 
	
 	<insert id="insertEventComment" parameterType="EventComment">
		insert into event_comment(title, content, start_date, end_date, store_code, persons_code, service_type_code) 
		values(#{title}, #{content},#{startDate}, #{endDate}, #{storeCode}, #{personsCode}, #{serviceTypeCode})	
	</insert> 
 
  	<update id="updateEventComment" parameterType="All">
		UPDATE event_comment SET
		title = #{title},
		content = #{content},
		start_date = #{startDate},
		end_date = #{endDate},
		store_code = #{storeCode},
		persons_code = #{personsCode},
		service_type_code = #{serviceTypeCode}
		WHERE comment_code = #{commentCode}
	</update>
 	
	<delete id="deleteEventComment" parameterType="INTEGER">
		DELETE FROM event_comment
		WHERE comment_code = #{commentCode}
	</delete>
	
	<!--  int regionCode, int typeCode, int personsCode, int serviceTypeCode -->
	 <select id= "getEventCommentsByCategory" parameterType="EventComment"
						resultType="All">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 
		<where>
		<if test="regionCode != 0">
    		region_code = #{regionCode}
  		</if>
  		<if test="typeCode != 0">
  			and type_code = #{typeCode}
  		</if>
  		<if test="personsCode != 0">
  			and persons_code = #{personsCode}
  		</if>
  		<if test="serviceTypeCode != 0">
  			and service_type_code = #{serviceTypeCode}
  		</if>
  		</where>		
	</select>
	
	<!-- <select id= "getEventCommentsByRegionCode" parameterType="Integer"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 		
		where region_code = #{regionCode}		
	</select>
	
	<select id= "getEventCommentsByTypeCode" parameterType="Integer"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 		
		where type_code = #{typeCode}		
	</select>
	
	<select id= "getEventCommentsByPersonsCode" parameterType="Integer"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 		
		where persons_code = #{personsCode}		
	</select>
	
	<select id= "getEventCommentsByServiceTypeCode" parameterType="Integer"
						resultMap="EventCommentMap">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		 		
		where service_type_code = #{serviceTypeCode}			
	</select> -->
	
	<select id= "getEventCommentsByKeyword" parameterType="EventComment"
						resultType="All">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	
		
		where title like '%${keyword}%'
		or content like '%${keyword}%'
		or store_name like '%${keyword}%'
		or store_adress like '%${keyword}%'
		or owner_name like '%${keyword}%'
		or region_name like '%${keyword}%'
		or type_name like '%${keyword}%'
		or persons_level like '%${keyword}%'
		or service_type_name like '%${keyword}%'

	</select>
	
	<select id= "getAllEventComments" resultType="All">
		select * 
		from event_comment
	</select>
	
	<select id= "getEventCommentsByOwnerId" parameterType="EventComment"
						resultType="All">
		select * 
		from event_comment e
		join stores s using(store_code)
		<!-- join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)	 -->
		 		
		where owner_id = #{ownerId}			
	</select>
	
	
	 <select id= "getEventCommentByCommentCode" parameterType="Integer"
						resultType="All">
		select * 
		from event_comment e
		join stores s using(store_code)
		join region r using(region_code)
		join store_type t using(type_code)
		join persons p using(persons_code)
		join service_type using(service_type_code)
		join owners using(owner_id)
		 		
		where comment_code = #{commentCode}			
	</select>

</mapper>