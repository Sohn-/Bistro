package joojoo.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 새 테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Grade implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** grade_code. */
	private Integer gradeCode;

	/** grade_name. */
	private String gradeName;

	/** 새 테이블 목록. */
	private Set<Users> usersSet;

	/**
	 * 생성자.
	 */
	public Grade() {
		this.usersSet = new HashSet<Users>();
	}

	/**
	 * grade_code을 설정합니다..
	 * 
	 * @param gradeCode
	 *            grade_code
	 */
	public void setGradeCode(Integer gradeCode) {
		this.gradeCode = gradeCode;
	}

	/**
	 * grade_code을 가져옵니다..
	 * 
	 * @return grade_code
	 */
	public Integer getGradeCode() {
		return this.gradeCode;
	}

	/**
	 * grade_name을 설정합니다..
	 * 
	 * @param gradeName
	 *            grade_name
	 */
	public void setGradeName(String gradeName) {
		this.gradeName = gradeName;
	}

	/**
	 * grade_name을 가져옵니다..
	 * 
	 * @return grade_name
	 */
	public String getGradeName() {
		return this.gradeName;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param usersSet
	 *            새 테이블 목록
	 */
	public void setUsersSet(Set<Users> usersSet) {
		this.usersSet = usersSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param users
	 *            새 테이블
	 */
	public void addUsers(Users users) {
		this.usersSet.add(users);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<Users> getUsersSet() {
		return this.usersSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((gradeCode == null) ? 0 : gradeCode.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Grade other = (Grade) obj;
		if (gradeCode == null) {
			if (other.gradeCode != null) {
				return false;
			}
		} else if (!gradeCode.equals(other.gradeCode)) {
			return false;
		}
		return true;
	}

}
