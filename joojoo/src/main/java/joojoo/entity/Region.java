package joojoo.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 새 테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Region implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** region_name. */
	private String regionName;

	/** region_code. */
	private Integer regionCode;

	/** 새 테이블 목록. */
	private Set<Stores> storesSet;

	/**
	 * 생성자.
	 */
	public Region() {
		this.storesSet = new HashSet<Stores>();
	}

	/**
	 * region_name을 설정합니다..
	 * 
	 * @param regionName
	 *            region_name
	 */
	public void setRegionName(String regionName) {
		this.regionName = regionName;
	}

	/**
	 * region_name을 가져옵니다..
	 * 
	 * @return region_name
	 */
	public String getRegionName() {
		return this.regionName;
	}

	/**
	 * region_code을 설정합니다..
	 * 
	 * @param regionCode
	 *            region_code
	 */
	public void setRegionCode(Integer regionCode) {
		this.regionCode = regionCode;
	}

	/**
	 * region_code을 가져옵니다..
	 * 
	 * @return region_code
	 */
	public Integer getRegionCode() {
		return this.regionCode;
	}

	/**
	 * 새 테이블 목록을 설정합니다..
	 * 
	 * @param storesSet
	 *            새 테이블 목록
	 */
	public void setStoresSet(Set<Stores> storesSet) {
		this.storesSet = storesSet;
	}

	/**
	 * 새 테이블를 추가합니다..
	 * 
	 * @param stores
	 *            새 테이블
	 */
	public void addStores(Stores stores) {
		this.storesSet.add(stores);
	}

	/**
	 * 새 테이블 목록을 가져옵니다..
	 * 
	 * @return 새 테이블 목록
	 */
	public Set<Stores> getStoresSet() {
		return this.storesSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((regionCode == null) ? 0 : regionCode.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Region other = (Region) obj;
		if (regionCode == null) {
			if (other.regionCode != null) {
				return false;
			}
		} else if (!regionCode.equals(other.regionCode)) {
			return false;
		}
		return true;
	}

}
